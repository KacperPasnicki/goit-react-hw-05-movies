{"version":3,"file":"static/js/501.e89423b0.chunk.js","mappings":"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","sources":["API/API.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","hooks/useFetchDetails.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '32592fc1c467ab313147df8555d6672d';\n\n    export const fetchSearch = async query => {\n        const res = await axios.get(\n          `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n        );\n      \n        return res.data;\n      };\n\n      export const fetchDetails = async id => {\n        const res = await axios.get(\n          `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n        );\n         console.log(res.data)\n        return res.data;\n      };\n    export const fetchTrending = async () => {\n    \n      const res = await axios.get\n        (`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}&include_adult=false`)\n        \n        console.log(res)\n        return res.data;\n        \n        }\n\n        export const fetchCredits = async id => {\n          const res = await axios.get(\n            `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n          );\n           \n          return res.data.cast;\n        };\n\n        export const fetchReviews = async id => {\n          const res = await axios.get(\n            `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n          );\n           \n          return res.data;\n        };","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import { useState, useEffect } from \"react\";\nimport {fetchDetails} from '../API/API'\n\nexport const useFetchDetails = (movieId) => {\n    const [movie, setMovie] = useState([]);\n  \n    useEffect(() => {\n      if (movieId) \n      fetchDetails(movieId).then(res => {\n        setMovie({...res});\n      });\n    }, [movieId]);\n   \n    return {movie};\n   \n  };","\nimport { useLocation, useParams, NavLink, Link, Outlet} from 'react-router-dom'\nimport {useFetchDetails} from 'hooks/useFetchDetails'\n\n\nconst MovieDetails = () => {\n     const location = useLocation();\n    const { movieId } = useParams();\n    const { movie } = useFetchDetails(movieId);\n    \n\n\nlet img_path=`https://image.tmdb.org/t/p/w500`\nconst backHref = location.state?.from ?? '/movies';\n\n\nif (!movie) return \"...Loading\";\n// let genres =[]\n\nreturn (\n<main>\n   <NavLink to={backHref} >\n   ‚Üê Go back\n   </NavLink>\n<div>\n      <img src={img_path+movie.poster_path} alt={movie.alt}  width=\"350px\" ></img>\n      </div>\n <h2>Title:{movie.title}({movie.release_date})</h2>\n <span>user score: {movie.vote_average}</span>\n <h3>Genres</h3>\n {/* {movie.genres.map(genre => genre.name).join(', ')} */}\n <h3>Overview:</h3>\n <span>\n    {movie.overview}\n </span>\n\n<h4>Additional information</h4>\n\n<ul>\n   <li>\n   <Link to=\"Cast\">\n      Cast\n   </Link></li>\n   <li>\n   <Link to=\"Reviews\">\n      Reviews\n   </Link></li>\n</ul>\n<Outlet />\n</main>\n)\n\n\n}\n\nexport default MovieDetails;\n"],"names":["API_KEY","fetchSearch","query","axios","res","data","fetchDetails","id","console","log","fetchCredits","cast","fetchReviews","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","useFetchDetails","movieId","useState","movie","setMovie","useEffect","then","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","location","useLocation","useParams","backHref","state","from","to","src","poster_path","alt","width","title","release_date","vote_average","overview"],"sourceRoot":""}