{"version":3,"file":"static/js/678.080fbf98.chunk.js","mappings":"sRAEMA,EAAU,mCAECC,EAAW,mCAAG,WAAMC,GAAN,uFACLC,EAAAA,GAAAA,IAAA,4DACqCH,EADrC,iCACqEE,EADrE,gCADK,cACjBE,EADiB,yBAKhBA,EAAIC,MALY,2CAAH,sDAQTC,EAAY,mCAAG,WAAMC,GAAN,uFACRJ,EAAAA,GAAAA,IAAA,6CACsBI,EADtB,oBACoCP,EADpC,oBADQ,cACpBI,EADoB,OAIzBI,QAAQC,IAAIL,EAAIC,MAJS,kBAKnBD,EAAIC,MALe,2CAAH,sDAiBVK,EAAY,mCAAG,WAAMH,GAAN,uFACRJ,EAAAA,GAAAA,IAAA,6CACsBI,EADtB,4BAC4CP,EAD5C,oBADQ,cACpBI,EADoB,yBAKnBA,EAAIC,KAAKM,MALU,2CAAH,sDAQZC,EAAY,mCAAG,WAAML,GAAN,uFACRJ,EAAAA,GAAAA,IAAA,6CACsBI,EADtB,4BAC4CP,EAD5C,oBADQ,cACpBI,EADoB,yBAKnBA,EAAIC,MALe,2CAAH,qD,6HCN7B,EA3BQ,WACR,IACA,ECH2B,SAACQ,GAC5B,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOH,EAAP,KAAaI,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACJH,IACJH,EAAAA,EAAAA,IAAaG,GAASI,MAAK,SAAAb,GACzBW,GAAQ,OAAIX,GACb,GACF,GAAE,CAACS,IAGG,CAACF,KAAAA,EAET,CDViBO,EADIC,EAAAA,EAAAA,MAAZN,SACAF,EAAR,EAAQA,KAIR,OAAKA,GAGF,wBACEA,GAAQA,EAAKS,KAAI,SAAAC,GAClB,OACA,gBAAIC,UAAU,SAAd,UAC6B,OAAxBD,EAAOE,cACJ,iBAAMD,UAAU,mBAAhB,qBAEJ,gBAAKE,IAbA,kCAacH,EAAOE,aAAcE,IAAKJ,EAAOK,KAAOC,MAAM,UAEjE,eAAIC,MAAO,CAACC,OAAO,KAAnB,SAA0BR,EAAOK,QACjC,0BAAQL,EAAOS,cAPST,EAAOd,GAS5B,MAfO,YAmBjB,C","sources":["API/API.jsx","components/Cast/Cast.jsx","hooks/useFetchCredits.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '32592fc1c467ab313147df8555d6672d';\n\n    export const fetchSearch = async query => {\n        const res = await axios.get(\n          `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n        );\n      \n        return res.data;\n      };\n\n      export const fetchDetails = async id => {\n        const res = await axios.get(\n          `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n        );\n         console.log(res.data)\n        return res.data;\n      };\n    export const fetchTrending = async () => {\n    \n      const res = await axios.get\n        (`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}&include_adult=false`)\n        \n        console.log(res)\n        return res.data;\n        \n        }\n\n        export const fetchCredits = async id => {\n          const res = await axios.get(\n            `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n          );\n           \n          return res.data.cast;\n        };\n\n        export const fetchReviews = async id => {\n          const res = await axios.get(\n            `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n          );\n           \n          return res.data;\n        };","\nimport { useFetchCredits } from \"hooks/useFetchCredits\"\nimport { useParams } from \"react-router-dom\";\n\nconst Cast= () => {\n    const { movieId } = useParams();\n    const { cast } =useFetchCredits(movieId);\n    let img_path=`https://image.tmdb.org/t/p/w500`\n\n    \n    if (!cast) return \"...Loading\";\n      return (\n     \n       <ul >\n        {cast && cast.map(actors => {\n        return (\n        <li className=\"actors\" key={actors.id}>\n            {actors.profile_path === null ? (\n                <span className=\"actorPlaceholder\">&#x263B;</span>\n            ) :\n            <img src={img_path+actors.profile_path} alt={actors.name}  width=\"80px\"></img>}\n           \n            <h5 style={{margin:'0'}}>{actors.name}</h5>\n            <span >{actors.character}</span>\n\n        </li>)})}\n       </ul>\n       \n      )\n    }\n    \n    export default Cast","import { useState, useEffect } from \"react\";\nimport { fetchCredits } from \"API/API\";\n\nexport const useFetchCredits = (movieId) => {\n    const [cast, setCast] = useState([]);\n  \n    useEffect(() => {\n      if (movieId) \n      fetchCredits(movieId).then(res => {\n        setCast([...res]);\n      });\n    }, [movieId]);\n    \n    \n    return {cast};\n   \n  };"],"names":["API_KEY","fetchSearch","query","axios","res","data","fetchDetails","id","console","log","fetchCredits","cast","fetchReviews","movieId","useState","setCast","useEffect","then","useFetchCredits","useParams","map","actors","className","profile_path","src","alt","name","width","style","margin","character"],"sourceRoot":""}