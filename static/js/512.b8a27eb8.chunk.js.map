{"version":3,"file":"static/js/512.b8a27eb8.chunk.js","mappings":"sRAEMA,EAAU,mCAECC,EAAW,mCAAG,WAAMC,GAAN,uFACLC,EAAAA,GAAAA,IAAA,4DACqCH,EADrC,iCACqEE,EADrE,gCADK,cACjBE,EADiB,yBAKhBA,EAAIC,MALY,2CAAH,sDAQTC,EAAY,mCAAG,WAAMC,GAAN,uFACRJ,EAAAA,GAAAA,IAAA,6CACsBI,EADtB,oBACoCP,EADpC,oBADQ,cACpBI,EADoB,OAIzBI,QAAQC,IAAIL,EAAIC,MAJS,kBAKnBD,EAAIC,MALe,2CAAH,sDAiBVK,EAAY,mCAAG,WAAMH,GAAN,uFACRJ,EAAAA,GAAAA,IAAA,6CACsBI,EADtB,4BAC4CP,EAD5C,oBADQ,cACpBI,EADoB,yBAKnBA,EAAIC,KAAKM,MALU,2CAAH,sDAQZC,EAAY,mCAAG,WAAML,GAAN,uFACRJ,EAAAA,GAAAA,IAAA,6CACsBI,EADtB,4BAC4CP,EAD5C,oBADQ,cACpBI,EADoB,yBAKnBA,EAAIC,MALe,2CAAH,qD,6HCP7B,EA5BW,WACX,IACA,ECD2B,SAACQ,GAC5B,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACJJ,IACJD,EAAAA,EAAAA,IAAaC,GAASK,MAAK,SAAAd,GACzBY,GAAW,OAAIZ,EAAIe,SACpB,GACF,GAAE,CAACN,IAGG,CAACE,QAAAA,EAET,CDZoBK,EADCC,EAAAA,EAAAA,MAAZR,SACAE,EAAR,EAAQA,QAGH,OAAKA,EACkB,IAAnBA,EAAQO,OACT,8CAML,wBAAKP,EAAQQ,KAAI,SAAAC,GAChB,OACI,2BACI,wBAAKA,EAAOC,UACjB,gCAAQD,EAAOE,aAFLF,EAAOC,OAKZ,MAfe,YAkBvB,C","sources":["API/API.jsx","components/Reviews/Reviews.jsx","hooks/useFetchReviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '32592fc1c467ab313147df8555d6672d';\n\n    export const fetchSearch = async query => {\n        const res = await axios.get(\n          `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n        );\n      \n        return res.data;\n      };\n\n      export const fetchDetails = async id => {\n        const res = await axios.get(\n          `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n        );\n         console.log(res.data)\n        return res.data;\n      };\n    export const fetchTrending = async () => {\n    \n      const res = await axios.get\n        (`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}&include_adult=false`)\n        \n        console.log(res)\n        return res.data;\n        \n        }\n\n        export const fetchCredits = async id => {\n          const res = await axios.get(\n            `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n          );\n           \n          return res.data.cast;\n        };\n\n        export const fetchReviews = async id => {\n          const res = await axios.get(\n            `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n          );\n           \n          return res.data;\n        };","import { useFetchReviews } from \"hooks/useFetchReviews\"\nimport { useParams } from \"react-router-dom\"\nconst Reviews= () => {\n    const { movieId } = useParams();\n    const { reviews } =useFetchReviews(movieId);\n\n      \n         if (!reviews)  return \"...Loading\";\n         if (reviews.length === 0) return (\n            \"We are sorry. There are not any reviews :(\"\n         )\n\n      return (\n        \n     \n       <ul>{reviews.map(review => {\n        return (\n            <li key={review.author}>\n                <h5>{review.author}</h5>\n           <span> {review.content}</span>\n\n\n        </li>) })}\n       </ul> \n       \n      )}\n    \n      \n    \n    \n    export default Reviews","import { useState, useEffect } from \"react\";\nimport { fetchReviews } from \"API/API\";\n\nexport const useFetchReviews = (movieId) => {\n    const [reviews, setReviews] = useState([]);\n  \n    useEffect(() => {\n      if (movieId) \n      fetchReviews(movieId).then(res => {\n        setReviews([...res.results]);\n      });\n    }, [movieId]);\n    \n    \n    return {reviews};\n   \n  };"],"names":["API_KEY","fetchSearch","query","axios","res","data","fetchDetails","id","console","log","fetchCredits","cast","fetchReviews","movieId","useState","reviews","setReviews","useEffect","then","results","useFetchReviews","useParams","length","map","review","author","content"],"sourceRoot":""}