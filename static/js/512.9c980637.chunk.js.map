{"version":3,"file":"static/js/512.9c980637.chunk.js","mappings":"sRAEMA,EAAU,mCAEHC,EAAW,mCAAG,WAAMC,GAAN,uFACPC,EAAAA,GAAAA,IAAA,4DACqCH,EADrC,iCACqEE,EADrE,gCADO,cACnBE,EADmB,yBAKlBA,EAAIC,MALc,2CAAH,sDAQXC,EAAY,mCAAG,WAAMC,GAAN,uFACRJ,EAAAA,GAAAA,IAAA,6CACsBI,EADtB,oBACoCP,EADpC,oBADQ,cACpBI,EADoB,yBAKnBA,EAAIC,MALe,2CAAH,sDAeZG,EAAY,mCAAG,WAAMD,GAAN,uFACRJ,EAAAA,GAAAA,IAAA,6CACsBI,EADtB,4BAC4CP,EAD5C,oBADQ,cACpBI,EADoB,yBAKnBA,EAAIC,KAAKI,MALU,2CAAH,sDAQZC,EAAY,mCAAG,WAAMH,GAAN,uFACRJ,EAAAA,GAAAA,IAAA,6CACsBI,EADtB,4BAC4CP,EAD5C,oBADQ,cACpBI,EADoB,yBAKnBA,EAAIC,MALe,2CAAH,qD,6HCZzB,EArBgB,WACd,IACA,ECD6B,SAAAM,GAC7B,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACJJ,IACFD,EAAAA,EAAAA,IAAaC,GAASK,MAAK,SAAAZ,GACzBU,GAAW,OAAIV,EAAIa,SACpB,GACJ,GAAE,CAACN,IAEG,CAAEE,QAAAA,EACV,CDVqBK,EADAC,EAAAA,EAAAA,MAAZR,SACAE,EAAR,EAAQA,QAER,OAAKA,EACkB,IAAnBA,EAAQO,OAAqB,8CAG/B,wBACGP,EAAQQ,KAAI,SAAAC,GACX,OACE,2BACE,wBAAKA,EAAOC,UACZ,gCAAQD,EAAOE,aAFRF,EAAOC,OAKnB,MAZgB,YAetB,C","sources":["API/API.jsx","components/Reviews/Reviews.jsx","hooks/useFetchReviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '32592fc1c467ab313147df8555d6672d';\n\nexport const fetchSearch = async query => {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return res.data;\n};\n\nexport const fetchDetails = async id => {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\nexport const fetchTrending = async () => {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}&include_adult=false`\n  );\n\n  return res.data;\n};\n\nexport const fetchCredits = async id => {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n","import { useFetchReviews } from 'hooks/useFetchReviews';\nimport { useParams } from 'react-router-dom';\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const { reviews } = useFetchReviews(movieId);\n\n  if (!reviews) return '...Loading';\n  if (reviews.length === 0) return 'We are sorry. There are not any reviews :(';\n\n  return (\n    <ul>\n      {reviews.map(review => {\n        return (\n          <li key={review.author}>\n            <h5>{review.author}</h5>\n            <span> {review.content}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import { useState, useEffect } from 'react';\nimport { fetchReviews } from 'API/API';\n\nexport const useFetchReviews = movieId => {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (movieId)\n      fetchReviews(movieId).then(res => {\n        setReviews([...res.results]);\n      });\n  }, [movieId]);\n\n  return { reviews };\n};\n"],"names":["API_KEY","fetchSearch","query","axios","res","data","fetchDetails","id","fetchCredits","cast","fetchReviews","movieId","useState","reviews","setReviews","useEffect","then","results","useFetchReviews","useParams","length","map","review","author","content"],"sourceRoot":""}